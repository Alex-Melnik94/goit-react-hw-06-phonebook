{"version":3,"sources":["ContactList-ui/contact-list.module.css","Filter-ui/filter.module.css","styles.module.css","redux/phonebook/phonebook-actions.js","ContactForm-ui/ContactForm.js","Filter-ui/filter.js","ContactList-ui/ContactList.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","ContactForm-ui/contact-form.module.css"],"names":["module","exports","actions","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","Form","useState","setName","setNumber","contacts","useSelector","state","phonebook","items","dispatch","useDispatch","resetForm","className","styles","form","onSubmit","e","preventDefault","sameContact","find","prevContact","alert","autoComplete","label","input","type","pattern","title","required","onChange","target","value","button","Filter","filter","currentTarget","ContactList","filteredContacts","contact","toLowerCase","includes","list","map","item","onClick","App","container","createReducer","action","_","combineReducers","phonebookPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","allStore","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.4e02bd45.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contact-list_list__IOqXU\",\"item\":\"contact-list_item__3lkv2\",\"button\":\"contact-list_button__22AFP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"filter_label__2TqV9\",\"input\":\"filter_input__1-AS1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__OqNS5\"};","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('phonebook/Add', (name, number) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('phonebook/Delete');\nconst changeFilter = createAction('phonebook/ChangeFilter');\n\nconst actions = {\n  addContact,\n  deleteContact,\n  changeFilter,\n};\n\nexport default actions;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './contact-form.module.css';\nimport actions from '../redux/phonebook/phonebook-actions';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(state => state.phonebook.items);\n  const dispatch = useDispatch();\n\n  const handleNameChange = e => {\n    setName(e.target.value);\n  };\n\n  const handleNumberChange = e => {\n    setNumber(e.target.value);\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n\n    const sameContact = contacts.find(prevContact => prevContact.name === name);\n\n    if (sameContact) {\n      alert(`${sameContact.name} is already in contacts`);\n      return;\n    }\n    dispatch(actions.addContact(name, number));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.form} onSubmit={onSubmitHandler} autoComplete=\"off\">\n      <label className={styles.label}>\n        Name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleNameChange}\n          value={name}\n        />\n      </label>\n\n      <label className={styles.label}>\n        Number\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleNumberChange}\n          value={number}\n        />\n      </label>\n      <button className={styles.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport styles from './filter.module.css';\nimport actions from '../redux/phonebook/phonebook-actions';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.phonebook.filter);\n\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        onChange={e => dispatch(actions.changeFilter(e.currentTarget.value))}\n        value={filter}\n      />\n    </label>\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from './contact-list.module.css';\nimport actions from '../redux/phonebook/phonebook-actions';\n\nconst ContactList = () => {\n  const contacts = useSelector(state => state.phonebook.items);\n  const filter = useSelector(state => state.phonebook.filter);\n  const dispatch = useDispatch();\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\n  const onDelete = id => dispatch(actions.deleteContact(id));\n\n  return (\n    <ul className={styles.list}>\n      {filteredContacts.map(contact => {\n        return (\n          <li className={styles.item} key={contact.id}>\n            {contact.name}: {contact.number}\n            <button\n              className={styles.button}\n              type=\"button\"\n              onClick={() => {\n                onDelete(contact.id);\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import ContactForm from './ContactForm-ui/ContactForm';\nimport Filter from './Filter-ui/filter';\nimport ContactList from './ContactList-ui/ContactList';\nimport styles from './styles.module.css';\n\nexport default function App() {\n  return (\n    <div className={styles.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './phonebook-actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, action) => [...state, action.payload],\n  [actions.deleteContact]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import {\n  combineReducers,\n  configureStore,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phonebookReducer from './phonebook/phonebook-reducer';\n\nconst phonebookPersistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['filter'],\n};\n\n// const rootReducer = combineReducers({\n//   phonebook: persistReducer(persistConfig, phonebookReducer),\n// });\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    phonebook: persistReducer(phonebookPersistConfig, phonebookReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nconst allStore = {\n  store,\n  persistor,\n};\n\nexport default allStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport allStore from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={allStore.store}>\n      <PersistGate loading={null} persistor={allStore.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n    ,\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contact-form_form__15lIV\",\"label\":\"contact-form_label__1gTJc\",\"input\":\"contact-form_input__2WdSM\",\"button\":\"contact-form_button__Qz_Qf\"};"],"sourceRoot":""}